<?php
defined('_JEXEC') or die;

class Railway2ModelYandexrasp extends JModelLegacy {
    public function __construct(array $config = array())
    {
        parent::__construct($config);
    }

    public static function getInstance($type, $prefix = '', $config = array())
    {
        return parent::getInstance($type, $prefix, $config); // TODO: Change the autogenerated stub
    }

    public function query() {
        $options = JComponentHelper::getParams('com_railway2');
        $this->params = array();
        $apiUrl = $options->get('yandex-rasp-api-url');
        $this->params['apikey'] = $options->get('yandex-rasp-api-key');
        $this->params['format'] = $options->get('yandex-rasp-api-format');
        $this->params['lang'] = $options->get('yandex-rasp-api-lang');
        $url = $apiUrl.'/'.$this->getMethod().'/?'.$this->getQuery();
        return $url;
    }

    private function getQuery() {
        switch (JFactory::getApplication()->input->getString('view')) {
            case 'station': {
                $this->params['station'] = $this->esr;
                $this->params['transport_types'] = 'suburban';
                $this->params['system'] = 'esr';
                $this->params['show_systems'] = 'all';
                break;
            }
            default: {
                return false;
            }
        }

        return http_build_query($this->params);
    }

    private function getMethod() {
        switch (JFactory::getApplication()->input->getString('view')) {
            case 'station': {
                return 'schedule';
                break;
            }
        }
    }

    public function setESR($code) {
        if (!intval($code)) {
            return false;
        }
        $this->esr = $code;
        return true;
    }

    public function getESR() {
        return $this->esr;
    }

    private $esr, $params, $method;
}